{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Copernicus Marine Data Testing Scripts This repository contains automated testing scripts designed to monitor and verify the quality and availability of data from the Copernicus Data Store. Purpose The primary focus of these tests is not to validate the functionalities of the Copernicus Marine Toolbox commands themselves, but rather to: Ensure the integrity of the datasets Monitor the download speed Verify the availability of the latest data Current Tests The initial suite of tests includes: Regular checks for the presence of the most recent datasets Comparison between current and historical datasets to detect unintended modifications Measurement and logging of data download speeds Feedback and Contributions Your questions, feedback, and suggestions are highly welcome! Please reach out to: Guillaume Koenig Email: gkoenig@mercator-ocean.fr Feel free to use, modify, and share these scripts under an open, collaborative spirit.","title":"Home"},{"location":"#copernicus-marine-data-testing-scripts","text":"This repository contains automated testing scripts designed to monitor and verify the quality and availability of data from the Copernicus Data Store.","title":"Copernicus Marine Data Testing Scripts"},{"location":"#purpose","text":"The primary focus of these tests is not to validate the functionalities of the Copernicus Marine Toolbox commands themselves, but rather to: Ensure the integrity of the datasets Monitor the download speed Verify the availability of the latest data","title":"Purpose"},{"location":"#current-tests","text":"The initial suite of tests includes: Regular checks for the presence of the most recent datasets Comparison between current and historical datasets to detect unintended modifications Measurement and logging of data download speeds","title":"Current Tests"},{"location":"#feedback-and-contributions","text":"Your questions, feedback, and suggestions are highly welcome! Please reach out to: Guillaume Koenig Email: gkoenig@mercator-ocean.fr Feel free to use, modify, and share these scripts under an open, collaborative spirit.","title":"Feedback and Contributions"},{"location":"database_schema/","text":"Database Schema and Usage Currently, the database contains a single table with rows describing each download attempt, including errors. To connect: psql -h HOST -p PORT -U USERNAME -d DATABASE_NAME List tables: \\dt Show first 10 rows: SELECT * FROM my_table LIMIT 10; Show last 10 rows: SELECT * FROM my_table ORDER BY id DESC LIMIT 10;","title":"Database"},{"location":"database_schema/#database-schema-and-usage","text":"Currently, the database contains a single table with rows describing each download attempt, including errors.","title":"Database Schema and Usage"},{"location":"database_schema/#to-connect","text":"psql -h HOST -p PORT -U USERNAME -d DATABASE_NAME","title":"To connect:"},{"location":"database_schema/#list-tables","text":"\\dt","title":"List tables:"},{"location":"database_schema/#show-first-10-rows","text":"SELECT * FROM my_table LIMIT 10;","title":"Show first 10 rows:"},{"location":"database_schema/#show-last-10-rows","text":"SELECT * FROM my_table ORDER BY id DESC LIMIT 10;","title":"Show last 10 rows:"},{"location":"further_development/","text":"Further Development Planned Features Automated delivery of test results via email notifications More advanced database schema to support historical trend analysis Long-term comparison of dataset quality and availability Vision The long-term idea is to provide a reliable, automated monitoring pipeline for the Copernicus Data Store. This would allow users to: Track data availability trends Identify recurring download failures Ensure data integrity across updates Share transparent monitoring results with the community","title":"Further"},{"location":"further_development/#further-development","text":"","title":"Further Development"},{"location":"further_development/#planned-features","text":"Automated delivery of test results via email notifications More advanced database schema to support historical trend analysis Long-term comparison of dataset quality and availability","title":"Planned Features"},{"location":"further_development/#vision","text":"The long-term idea is to provide a reliable, automated monitoring pipeline for the Copernicus Data Store. This would allow users to: Track data availability trends Identify recurring download failures Ensure data integrity across updates Share transparent monitoring results with the community","title":"Vision"},{"location":"usage/","text":"Usage Most of the scripts can be run independently. To run a script: python script_name.py --data-dir path_to_storage Where path_to_storage is the directory where results will be stored. Scripts Overview add_data_in_database Takes the data from a CSV file containing download attempts (downloaded_datasets) and inserts results into a database. check_if_download_errors Searches the downloaded_datasets CSV for failed downloads and returns False if any are found. extracts_datasets_from_describe Creates a CSV containing dataset information using the copernicusmarine.describe command. r- etrieve_from_describe_test_availabilibity_and_push_in_db Master script. Loads datasets from describe, attempts downloads, stores results in a database, and returns False if downloads fail. test_downloading_datasets Reads list_of_informations_from_the_describe.csv and tries to download all datasets listed. treating_outputs Reads the downloaded_datasets CSV and provides basic statistics by region. Execution Order Some scripts depend on others having been run first: retrieve_from_describe_test_availabilibity_and_push_in_db \u2013 standalone extracts_datasets_from_describe \u2013 standalone test_downloading_datasets \u2013 requires step 2 check_if_download_errors \u2013 requires step 3 add_data_in_database \u2013 requires step 3 treating_outputs \u2013 requires step 3","title":"Usage"},{"location":"usage/#usage","text":"Most of the scripts can be run independently. To run a script: python script_name.py --data-dir path_to_storage Where path_to_storage is the directory where results will be stored.","title":"Usage"},{"location":"usage/#scripts-overview","text":"add_data_in_database Takes the data from a CSV file containing download attempts (downloaded_datasets) and inserts results into a database. check_if_download_errors Searches the downloaded_datasets CSV for failed downloads and returns False if any are found. extracts_datasets_from_describe Creates a CSV containing dataset information using the copernicusmarine.describe command. r- etrieve_from_describe_test_availabilibity_and_push_in_db Master script. Loads datasets from describe, attempts downloads, stores results in a database, and returns False if downloads fail. test_downloading_datasets Reads list_of_informations_from_the_describe.csv and tries to download all datasets listed. treating_outputs Reads the downloaded_datasets CSV and provides basic statistics by region.","title":"Scripts Overview"},{"location":"usage/#execution-order","text":"Some scripts depend on others having been run first: retrieve_from_describe_test_availabilibity_and_push_in_db \u2013 standalone extracts_datasets_from_describe \u2013 standalone test_downloading_datasets \u2013 requires step 2 check_if_download_errors \u2013 requires step 3 add_data_in_database \u2013 requires step 3 treating_outputs \u2013 requires step 3","title":"Execution Order"}]}